{"version":3,"sources":["components/RoiCalculator/RoiBarChart.js","components/RoiCalculator/RoiSlider.js","App.js","serviceWorker.js","index.js"],"names":["RoiBarChart","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","yaxis","state","currentWidth","react_default","a","createElement","es6","type","tickFormatter","data","Intl","NumberFormat","style","currency","format","allowDecimals","window","innerWidth","addEventListener","resize","bind","setState","name","label","timesheet_savings","roster_optimisation","reduction_time","elimination_award","CustomizedAxisTick","_Component2","apply","arguments","inherits","createClass","key","value","_this$props","x","y","payload","transform","concat","dy","fontSize","textAnchor","verticalAnchor","width","Component","renderBarChart","className","height","content","_ref","active","getIntroOfPage","stroke","vertical","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","dataKey","fill","barSize","position","formatter","interval","tick","RoiSlider","gradient","size","document","getElementById","handleSwitch","e","state_pay_period","pay_period","business_size","getROI","color","handleChange","event","target","HTMLInputElement","getTimesheetSavings","Math","pow","getRosterOptimisation","getReductionTime","getEliminationAward","getAnnualSavings","annual_savings","getAnnualSubscriptionCost","annual_subscription","roi","checked","Row","Col","lg","md","defaultChecked","onClick","sm","min","step","onChange","max","RoiBarChart_RoiBarChart","Number","toFixed","toLocaleString","toString","replace","round","App","RoiSlider_RoiSlider","Boolean","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cad68fdf.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, CartesianGrid, ResponsiveContainer, LabelList, Text} from 'recharts';\n\n\nexport default class RoiBarChart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { currentWidth: window.innerWidth };\n      }\n\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.resize.bind(this));\n        this.resize();\n    }\n    \n    resize() {\n        this.setState({currentWidth: window.innerWidth >= 768});\n        this.yaxis()\n    }\n\n    yaxis = () => {\n        if(this.state.currentWidth) {\n            return (\n                <YAxis type=\"number\" tickFormatter={(data) => new Intl.NumberFormat('en', { style: 'currency', currency: 'USD' }).format(data)} allowDecimals={false}/>\n            )\n        }\n    }\n\n    render() {\n        const data = [\n            {name: 'Timesheet rounding savings', label: this.props.timesheet_savings},\n            {name: 'Roster optimisation', label: this.props.roster_optimisation},\n            {name: 'Reduction in rostering admin time', label: this.props.reduction_time},\n            {name: 'Elimination of manual award interpretation', label: this.props.elimination_award}\n        ];\n\n        //Tick\n        class CustomizedAxisTick extends Component {\n            render () {\n              const {x, y, payload} = this.props;\n                 return (\n                  <g transform={`translate(${x},${y})`}>\n                  <Text dy={16} fontSize={14} textAnchor=\"middle\" verticalAnchor=\"start\" width={80}>{payload.value}</Text>        \n                </g>\n              );\n            }\n        };\n\n        //Tooltip\n        const getIntroOfPage = (label) => {\n            if (label === 'Timesheet rounding savings') {\n              return 'Estimated savings from using Tanda’s Smart Timesheet Rounding that ensures staff are paid only for the hours they work with built in photo verification.';\n            } if (label === 'Roster optimisation') {\n              return 'Expected savings from having live, award interpreted wage data and overtime flags while building the roster.';\n            } if (label === 'Reduction in rostering admin time') {\n              return 'Admin savings by utilising Tanda’s simple online rostering solution with features like smart templates, forecasting and auto shift-filling.';\n            } if (label === 'Elimination of manual award interpretation') {\n              return 'Cost savings gained by removing the need for manual award interpretation with Tanda’s award interpreter handling pay calculations.';\n            }\n          }\n        const CustomTooltip = ({ payload, label, active }) => {\n        if (active) {\n            return (\n\n            <div className=\"staff-tooltip\">\n                <p>{label}</p>\n                <p>{getIntroOfPage(label)}</p>\n            </div>\n            );\n        }\n            return null;\n        }         \n        \n        const renderBarChart = (\n            <div className=\"barChart\">\n                <ResponsiveContainer  width=\"100%\" height=\"100%\">\n                    <BarChart width={400} height={300} data={data}>\n                        <Tooltip content={<CustomTooltip />} />\n                        <CartesianGrid stroke=\"#efefef\" vertical={false} />\n                        <defs>\n                            <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                                <stop offset=\"0%\" stopColor=\"#F76B1C\" stopOpacity={1} />\n                                <stop offset=\"24.36%\" stopColor=\"#F9A842\" stopOpacity={1} />\n                                <stop offset=\"100%\" stopColor=\"#FAD961\" stopOpacity={1} />\n                            </linearGradient>\n                        </defs>\n                        <Bar type=\"monotone\" dataKey=\"label\" fill=\"url(#colorUv)\" barSize={60} >\n                            <LabelList position=\"top\" dataKey=\"label\" formatter={(data) => new Intl.NumberFormat('en', { style: 'currency', currency: 'USD' }).format(data)} />\n                        </Bar>\n                        <XAxis type=\"category\" dataKey=\"name\" interval={0} width={40} tick={<CustomizedAxisTick/>}  />\n                        {this.yaxis()}\n                    </BarChart>\n                </ResponsiveContainer>\n            </div>\n          );\n\n          \n        return(\n            <div>\n                {renderBarChart}      \n            </div>\n        )\n    }\n}\n  ","import React, { Component } from 'react';\nimport {Col, Row} from 'reactstrap'\nimport RoiBarChart from './RoiBarChart';\n\nexport default class RoiSlider extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            checked: false,\n            pay_period: 26,\n          business_size: 50\n        };\n      }\n\n\n    componentDidMount() {\n        this.gradient(this.state.business_size)\n        this.getROI(this.state.business_size)\n    }\n\n    gradient = (size) => {\n        let gradient = size * .094\n        document.getElementById('gradient').style.width=gradient+\"%\";\n    }\n\n    handleSwitch = (e) => {\n        const state_pay_period = this.state.pay_period\n        const size = this.state.business_size\n        let pay_period = (state_pay_period === 52 ) ? 26 : 52\n        this.setState({ pay_period }, () => this.getROI(size))\n        if (pay_period === 52) {\n            document.getElementById('fortnightly').style.color=\"#9B9B9B\";\n            document.getElementById('weekly').style.color=\"#fff\";\n        } else {\n            document.getElementById('fortnightly').style.color=\"#fff\";\n            document.getElementById('weekly').style.color=\"#9B9B9B\";\n        }\n    }\n\n    handleChange = (event) => {\n        let target = event.target;\n        // let gradient = target.value * .09\n        if (target instanceof HTMLInputElement) {\n            this.gradient(target.value)\n            this.setState({\n                business_size: target.value\n            }, () => {this.getROI(target.value)});\n        }\n    }\n    \n\n    getTimesheetSavings = (size) => {\n        let timesheet_savings = (156 * 2 * 0.0167 * 32.04 * size)**1.05\n        this.setState({ timesheet_savings })\n        return timesheet_savings\n    }\n\n    getRosterOptimisation = (size) => {\n        let roster_optimisation = 156 * 6 * 32.04* 0.01 * size\n        this.setState({ roster_optimisation })\n        return roster_optimisation\n    }\n\n    getReductionTime = (size) => {\n        let reduction_time = this.state.pay_period * 0.05 * size * 32.04\n        this.setState({ reduction_time })\n        return reduction_time\n    }\n\n    getEliminationAward = (size) => {\n        let elimination_award = size * 32.04 * 0.2 * this.state.pay_period\n        this.setState({ elimination_award })\n        return elimination_award\n    }\n\n    getAnnualSavings = (size) => {\n        let timesheet_savings = this.getTimesheetSavings(size)\n        let roster_optimisation = this.getRosterOptimisation(size)\n        let reduction_time = this.getReductionTime(size)\n        let elimination_award = this.getEliminationAward(size)\n\n        let annual_savings = timesheet_savings + roster_optimisation + reduction_time + elimination_award\n        this.setState({ annual_savings })\n        return annual_savings\n    }\n\n    getAnnualSubscriptionCost = (size) => {\n        let annual_subscription = size * 10 * 12\n        this.setState({ annual_subscription })\n        return annual_subscription\n    }\n\n    getROI = (size) => {\n        let annual_subscription = this.getAnnualSubscriptionCost(size);\n        let annual_savings = this.getAnnualSavings(size);\n        let roi = (annual_savings/annual_subscription)*100;\n        this.setState({roi})\n        return  roi\n    }\n\n    render() {\n        return(\n            <div>\n                <div className=\"staff\">\n                    <Row className=\"mb-5 pb-3\">\n                        <Col lg=\"6\" md=\"6\">\n                            <p className=\"title desktop\">Calculate your Return of Investment (ROI)</p>\n                            <p className=\"title mobile\">Calculate your ROI</p> \n                        </Col>\n                        <Col lg=\"6\" md=\"6\">\n                            <label id=\"switch\" className=\"switch\">\n                                <input type=\"checkbox\" defaultChecked={true} value={this.state.pay_period} onClick={this.handleSwitch} />\n                                <span className=\"slider round\"></span>\n                                <span id=\"weekly\">Weekly</span>\n                                <span id=\"fortnightly\">Fortnightly</span>\n                            </label>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col lg=\"2\" md=\"2\" sm=\"12\">\n                            <p className=\"label\">Staff Count</p>\n                            <input type=\"number\" className=\"staff-count\" min=\"1\" step=\"1\" value={this.state.business_size} onChange={this.handleChange}/>\n                        </Col>\n                        <Col lg=\"8\" md=\"8\" sm=\"12\">\n                            <span id=\"gradient\"></span>\n                            <input value={this.state.business_size}  className=\"w-100\" type=\"range\" min=\"1\" max=\"1000\" onChange={this.handleChange} />\n                        </Col>\n                        <Col lg=\"2\" md=\"2\" sm=\"2\">\n                            <p className=\"label-right\">1000+</p>\n                        </Col>\n                    </Row>\n                    \n                    <RoiBarChart \n                        timesheet_savings={Number(this.state.timesheet_savings).toFixed(2).toLocaleString()}\n                        roster_optimisation={Number(this.state.roster_optimisation).toFixed(2).toLocaleString()}\n                        reduction_time={Number(this.state.reduction_time).toFixed(2).toLocaleString()}\n                        elimination_award={Number(this.state.elimination_award).toFixed(2).toLocaleString()}\n                    />\n\n                </div>\n                <div className=\"annual\">\n                    <Row>\n                        <Col md=\"4\"  sm=\"12\">\n                                <p className=\"title\">Annual Savings</p>\n                                <p className=\"result\">${Number(this.state.annual_savings).toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\n                        </Col>\n                        <Col md=\"4\" sm=\"12\" className=\"middle\">\n                                <p className=\"title\">Annual Subscription Cost</p>\n                                <p className=\"result\">${Number(this.state.annual_subscription).toFixed(2).toLocaleString().toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\n                        </Col>\n                        <Col md=\"4\" sm=\"12\">\n                                <p className=\"title\">ROI</p>\n                                <p className=\"result\">{Math.round(Number(this.state.roi).toLocaleString())}%</p>\n                        </Col>\n                    </Row>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport \"./components/RoiCalculator/Styles.css\";\nimport RoiSlider from './components/RoiCalculator/RoiSlider';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <RoiSlider />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('roiCal'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}